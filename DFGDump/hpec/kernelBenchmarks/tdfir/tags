!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CC	Makefile	/^CC = gcc$/;"	m
CCDEBUGFLAGS	Makefile	/^CCDEBUGFLAGS = -g -xc -ansi -lm$/;"	m
CCFLAGS	Makefile	/^CCFLAGS = -xc -ansi -lm$/;"	m
EPS	tdFirVerify.c	18;"	d	file:
INC	Makefile	/^INC = -I..\/include$/;"	m
TDFIR_H_	tdFir.h	17;"	d
arguments	tdFir.h	/^  int   arguments;$/;"	m	struct:tdFirVariables
dataSet	tdFir.h	/^  char  *dataSet;$/;"	m	struct:tdFirVariables
elCplxMul	tdFir.c	/^void elCplxMul(float *dataPtr, float *filterPtr, float *resultPtr, int inputLength)$/;"	f
filter	tdFir.h	/^  PcaCArrayFloat filter;$/;"	m	struct:tdFirVariables
filterLength	tdFir.h	/^  int   filterLength;$/;"	m	struct:tdFirVariables
input	tdFir.h	/^  PcaCArrayFloat input;$/;"	m	struct:tdFirVariables
inputLength	tdFir.h	/^  int   inputLength;$/;"	m	struct:tdFirVariables
main	tdFir.c	/^int main(int argc, char **argv)$/;"	f
main	tdFirVerify.c	/^int main(int argc, char **argv)$/;"	f
numFilters	tdFir.h	/^  int   numFilters;$/;"	m	struct:tdFirVariables
printVector	tdFir.c	/^void printVector(float * dataPtr, int inputLength)$/;"	f
result	tdFir.h	/^  PcaCArrayFloat result;$/;"	m	struct:tdFirVariables
resultLength	tdFir.h	/^  int   resultLength;$/;"	m	struct:tdFirVariables
tdFir	tdFir.c	/^void tdFir(struct tdFirVariables *tdFirVars)$/;"	f
tdFirComplete	tdFir.c	/^void tdFirComplete(struct tdFirVariables *tdFirVars)$/;"	f
tdFirComplete	tdFirVerify.c	/^void tdFirComplete(struct tdFirVariables *tdFirVars)$/;"	f
tdFirGenerator	tdFirGenerator.m	/^function tdFirGenerator(dataSet, inputSize, filterSize, numFilters)$/;"	f
tdFirLatency	tdFirLatency.m	/^function l = tdFirLatency(dataSet)$/;"	f
tdFirSetup	tdFir.c	/^void tdFirSetup(struct tdFirVariables *tdFirVars)$/;"	f
tdFirThroughput	tdFirThroughput.m	/^function flopssec = tdFirThroughput(dataSet)$/;"	f
tdFirVariables	tdFir.h	/^struct tdFirVariables{$/;"	s
tdFirVars	tdFir.h	/^}tdFirVars; $/;"	v	typeref:struct:tdFirVariables
tdFirVerify	tdFirVerify.c	/^void tdFirVerify(struct tdFirVariables *tdFirVars)$/;"	f
tdFirWorkload	tdFirWorkload.m	/^function workload = tdFirWorkload(dataSet)$/;"	f
time	tdFir.h	/^  PcaCArrayFloat time;$/;"	m	struct:tdFirVariables
zeroData	tdFir.c	/^void zeroData(float *dataPtr, int length, int filters)$/;"	f
