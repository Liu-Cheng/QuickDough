Filename:     README.txt

Date:         May 6, 2005

Author:       Hector Chan, MIT Lincoln Laboratory

Description:  The following Readme gives a description into the details of
              the standard C Corner Turn kernel. Topics include:
	      -Kernel Description.
	      -File Descriptions.
              -Generating Data (matlab required) & Pre-generated Datasets
	      -Compiling the Application and Verification Tool
	      -Running the Application and Verification Tool
	      -Workload and Throughput Calculations (Matlab required)

Disclaimer:   
 Copyright (c) 2006, Massachusetts Institute of Technology
 All rights reserved.
 
 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are  
 met:
     * Redistributions of source code must retain the above copyright
       notice, this list of conditions and the following disclaimer.
     * Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimer in the
       documentation and/or other materials provided with the distribution.
     * Neither the name of the Massachusetts Institute of Technology nor  
       the names of its contributors may be used to endorse or promote 
       products derived from this software without specific prior written 
       permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF  
 THE POSSIBILITY OF SUCH DAMAGE.

Kernel Description:
___________________________________________________________________________
The corner turn kernel reads in a matrix then transposes it.  Data are stored 
in one contiguous block of memory.  The matrix is populated with single 
precision floating point real numbers.  We assume a single precision floating 
point number to be four bytes.  



Files:
___________________________________________________________________________
  ct.c            - C kernel code
  ctGenerator.m   - matlab function to generate input/output
  ctThroughput.m  - matlab function to calculate throughput
  ctVerify.c      - C code to verify kernel
  ctWorkload.m    - matlab function to calculate workload
  Makefile	  - Makefile for kernel and verifier
  README.txt      - this file



Generating Data (matlab required)
___________________________________________________________________________
To generate random data within matlab, invoke the ctGenerator 

  ctGenerator(DataSetNum, NumRows, NumCols)

  Inputs:
    DataSetNum - the input and output matrices will be written to 
                 files in the following format: <DataSetNum>-ct-<desc>.dat
    NumRows    - the number of rows for the input matrix
    NumCols    - the number of columns for the input matrix
 
  Outputs:
    Files: 
      ./data/<DataSetNum>-ct-inmatrix.dat    - the randomly generated matrix
      ./data/<DataSetNum>-ct-truthmatrix.dat - the transpose of the randomly 
                                                 generated matrix

  For more information, type "help ctGenerator" in matlab.


Pre-generated Data
___________________________________________________________________________
If matlab is not available, or you do not wish to use matlab, we have 
provided two pre-generated parameter sets.  They are located in the data
sub-directory, and are identified by a parameter set number.  The values 
of the two parameter sets are as follows:

 DataSet # |   NumRows   |   NumCols  |
---------------------------------------
    1      |      50     |    5000    |
    2      |     750     |    5000    |
-----------|-------------|------------|




Compiling the Application and Verification Tool
___________________________________________________________________________
To compile the application, run

  make

To clean the directory of executables, run

  make clean





Running Application and Verification Tool
___________________________________________________________________________

Once the application has been compiled, it may be invoked as follows:

  ct <data_set_number>

data_set_number tells the kernel which data set to run.  The user can run 
other data sets generated by the ctGenerator Matlab function.  The user just 
need to pass the kernel with the appropriate data set number.  Inputs and 
outputs are stored in the data subdirectory. If you run 'ls' on the 
sub-directory data, you should see the following:

  away:/home/chanh/xxxx/ct/data> ls -l
  total 46936
  -rw-r--r--  1 chanh games  1000020 May  6 13:44 0-ct-inmatrix.dat
  -rw-r--r--  1 chanh games  1000020 May  6 13:45 0-ct-outmatrix.dat   <- Output
  -rw-r--r--  1 chanh games       24 May  6 13:45 0-ct-timing.dat      <- Output
  -rw-r--r--  1 chanh games  1000020 May  6 13:44 0-ct-truthmatrix.dat
  -rw-r--r--  1 chanh games 15000020 May  6 13:44 1-ct-inmatrix.dat
  -rw-r--r--  1 chanh games 15000020 May  6 13:45 1-ct-outmatrix.dat   <- Output
  -rw-r--r--  1 chanh games       24 May  6 13:45 1-ct-timing.dat      <- Output
  -rw-r--r--  1 chanh games 15000020 May  6 13:44 1-ct-truthmatrix.dat

For verification, run

  ctVerify <data_set_number>





Workload and Throughput Calculations (Matlab required)
___________________________________________________________________________
The workload and throughput functions require Matlab.  For the workload
function, run in Matlab:

  >> data_set_num = 0;
  >> ctWorkload(data_set_num)

For the throughput calculation, run

  >> data_set_num = 0;
  >> ctThroughput(data_set_num)




SAMPLE:
___________________________________________________________________________

% make clean
rm -f ct ctVerify

% make
gcc -xc -ansi ct.c -o ct -I/data/pca/ckernels/include
gcc -xc -ansi ctVerify.c -o ctVerify -I/data/pca/ckernels/include

% matlab

>> ctGenerator(0, 50, 5000)
Generating test matrix of size 50 x 5000
Test matrix is stored in file ./data/0-ct-inmatrix.dat
Truth matrix is stored in file ./data/0-ct-truthmatrix.dat

>> quit

%./ct 0
done.

%./ctVerify 0
Verification: PASS


% matlab

>> ctWorkload(0)
ans =
   2000000

>> ctThroughput(0)
ans =
  9.0617e+07
