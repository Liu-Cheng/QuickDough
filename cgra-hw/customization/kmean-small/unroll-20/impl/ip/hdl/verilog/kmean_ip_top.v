// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.3
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ==============================================================

`timescale 1 ns / 1 ps
module kmean_ip_top (
sub_in_Clk_A,
sub_in_Rst_A,
sub_in_EN_A,
sub_in_WEN_A,
sub_in_Addr_A,
sub_in_Dout_A,
sub_in_Din_A,
sub_out_Clk_A,
sub_out_Rst_A,
sub_out_EN_A,
sub_out_WEN_A,
sub_out_Addr_A,
sub_out_Dout_A,
sub_out_Din_A,
s_axi_slv0_AWADDR,
s_axi_slv0_AWVALID,
s_axi_slv0_AWREADY,
s_axi_slv0_WDATA,
s_axi_slv0_WSTRB,
s_axi_slv0_WVALID,
s_axi_slv0_WREADY,
s_axi_slv0_BRESP,
s_axi_slv0_BVALID,
s_axi_slv0_BREADY,
s_axi_slv0_ARADDR,
s_axi_slv0_ARVALID,
s_axi_slv0_ARREADY,
s_axi_slv0_RDATA,
s_axi_slv0_RRESP,
s_axi_slv0_RVALID,
s_axi_slv0_RREADY,
interrupt,
aresetn,
aclk
);

parameter C_S_AXI_SLV0_ADDR_WIDTH = 4;
parameter C_S_AXI_SLV0_DATA_WIDTH = 32;
parameter RESET_ACTIVE_LOW = 1;

output sub_in_Clk_A ;
output sub_in_Rst_A ;
output sub_in_EN_A ;
output [4 - 1:0] sub_in_WEN_A ;
output [32 - 1:0] sub_in_Addr_A ;
output [32 - 1:0] sub_in_Dout_A ;
input [32 - 1:0] sub_in_Din_A ;


output sub_out_Clk_A ;
output sub_out_Rst_A ;
output sub_out_EN_A ;
output [4 - 1:0] sub_out_WEN_A ;
output [32 - 1:0] sub_out_Addr_A ;
output [32 - 1:0] sub_out_Dout_A ;
input [32 - 1:0] sub_out_Din_A ;


input [C_S_AXI_SLV0_ADDR_WIDTH - 1:0] s_axi_slv0_AWADDR ;
input s_axi_slv0_AWVALID ;
output s_axi_slv0_AWREADY ;
input [C_S_AXI_SLV0_DATA_WIDTH - 1:0] s_axi_slv0_WDATA ;
input [C_S_AXI_SLV0_DATA_WIDTH/8 - 1:0] s_axi_slv0_WSTRB ;
input s_axi_slv0_WVALID ;
output s_axi_slv0_WREADY ;
output [2 - 1:0] s_axi_slv0_BRESP ;
output s_axi_slv0_BVALID ;
input s_axi_slv0_BREADY ;
input [C_S_AXI_SLV0_ADDR_WIDTH - 1:0] s_axi_slv0_ARADDR ;
input s_axi_slv0_ARVALID ;
output s_axi_slv0_ARREADY ;
output [C_S_AXI_SLV0_DATA_WIDTH - 1:0] s_axi_slv0_RDATA ;
output [2 - 1:0] s_axi_slv0_RRESP ;
output s_axi_slv0_RVALID ;
input s_axi_slv0_RREADY ;
output interrupt ;

input aresetn ;

input aclk ;


wire sub_in_Clk_A;
wire sub_in_Rst_A;
wire sub_in_EN_A;
wire [4 - 1:0] sub_in_WEN_A;
wire [32 - 1:0] sub_in_Addr_A;
wire [32 - 1:0] sub_in_Dout_A;
wire [32 - 1:0] sub_in_Din_A;


wire sub_out_Clk_A;
wire sub_out_Rst_A;
wire sub_out_EN_A;
wire [4 - 1:0] sub_out_WEN_A;
wire [32 - 1:0] sub_out_Addr_A;
wire [32 - 1:0] sub_out_Dout_A;
wire [32 - 1:0] sub_out_Din_A;


wire [C_S_AXI_SLV0_ADDR_WIDTH - 1:0] s_axi_slv0_AWADDR;
wire s_axi_slv0_AWVALID;
wire s_axi_slv0_AWREADY;
wire [C_S_AXI_SLV0_DATA_WIDTH - 1:0] s_axi_slv0_WDATA;
wire [C_S_AXI_SLV0_DATA_WIDTH/8 - 1:0] s_axi_slv0_WSTRB;
wire s_axi_slv0_WVALID;
wire s_axi_slv0_WREADY;
wire [2 - 1:0] s_axi_slv0_BRESP;
wire s_axi_slv0_BVALID;
wire s_axi_slv0_BREADY;
wire [C_S_AXI_SLV0_ADDR_WIDTH - 1:0] s_axi_slv0_ARADDR;
wire s_axi_slv0_ARVALID;
wire s_axi_slv0_ARREADY;
wire [C_S_AXI_SLV0_DATA_WIDTH - 1:0] s_axi_slv0_RDATA;
wire [2 - 1:0] s_axi_slv0_RRESP;
wire s_axi_slv0_RVALID;
wire s_axi_slv0_RREADY;
wire interrupt;

wire aresetn;



wire [6 - 1:0] sig_kmean_ip_sub_in_address0;
wire sig_kmean_ip_sub_in_ce0;
wire [32 - 1:0] sig_kmean_ip_sub_in_q0;


wire [4 - 1:0] sig_kmean_ip_sub_out_address0;
wire sig_kmean_ip_sub_out_ce0;
wire sig_kmean_ip_sub_out_we0;
wire [32 - 1:0] sig_kmean_ip_sub_out_d0;
wire [32 - 1:0] sig_kmean_ip_sub_out_q0;

wire sig_kmean_ip_ap_start;
wire sig_kmean_ip_ap_ready;
wire sig_kmean_ip_ap_done;
wire sig_kmean_ip_ap_idle;

wire sig_kmean_ip_ap_rst;



kmean_ip kmean_ip_U(
    .sub_in_address0(sig_kmean_ip_sub_in_address0),
    .sub_in_ce0(sig_kmean_ip_sub_in_ce0),
    .sub_in_q0(sig_kmean_ip_sub_in_q0),
    .sub_out_address0(sig_kmean_ip_sub_out_address0),
    .sub_out_ce0(sig_kmean_ip_sub_out_ce0),
    .sub_out_we0(sig_kmean_ip_sub_out_we0),
    .sub_out_d0(sig_kmean_ip_sub_out_d0),
    .sub_out_q0(sig_kmean_ip_sub_out_q0),
    .ap_start(sig_kmean_ip_ap_start),
    .ap_ready(sig_kmean_ip_ap_ready),
    .ap_done(sig_kmean_ip_ap_done),
    .ap_idle(sig_kmean_ip_ap_idle),
    .ap_rst(sig_kmean_ip_ap_rst),
    .ap_clk(aclk)
);

kmean_ip_sub_in_if kmean_ip_sub_in_if_U(
    .clk(aclk),
    .reset(sig_kmean_ip_ap_rst),
    .sub_in_address0(sig_kmean_ip_sub_in_address0),
    .sub_in_ce0(sig_kmean_ip_sub_in_ce0),
    .sub_in_q0(sig_kmean_ip_sub_in_q0),
    .Clk_A(sub_in_Clk_A),
    .Rst_A(sub_in_Rst_A),
    .EN_A(sub_in_EN_A),
    .WEN_A(sub_in_WEN_A),
    .Addr_A(sub_in_Addr_A),
    .Dout_A(sub_in_Dout_A),
    .Din_A(sub_in_Din_A));

kmean_ip_sub_out_if kmean_ip_sub_out_if_U(
    .clk(aclk),
    .reset(sig_kmean_ip_ap_rst),
    .sub_out_address0(sig_kmean_ip_sub_out_address0),
    .sub_out_ce0(sig_kmean_ip_sub_out_ce0),
    .sub_out_we0(sig_kmean_ip_sub_out_we0),
    .sub_out_d0(sig_kmean_ip_sub_out_d0),
    .sub_out_q0(sig_kmean_ip_sub_out_q0),
    .Clk_A(sub_out_Clk_A),
    .Rst_A(sub_out_Rst_A),
    .EN_A(sub_out_EN_A),
    .WEN_A(sub_out_WEN_A),
    .Addr_A(sub_out_Addr_A),
    .Dout_A(sub_out_Dout_A),
    .Din_A(sub_out_Din_A));

kmean_ip_slv0_if #(
    .C_ADDR_WIDTH(C_S_AXI_SLV0_ADDR_WIDTH),
    .C_DATA_WIDTH(C_S_AXI_SLV0_DATA_WIDTH))
kmean_ip_slv0_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .I_ap_start(sig_kmean_ip_ap_start),
    .O_ap_ready(sig_kmean_ip_ap_ready),
    .O_ap_done(sig_kmean_ip_ap_done),
    .O_ap_idle(sig_kmean_ip_ap_idle),
    .AWADDR(s_axi_slv0_AWADDR),
    .AWVALID(s_axi_slv0_AWVALID),
    .AWREADY(s_axi_slv0_AWREADY),
    .WDATA(s_axi_slv0_WDATA),
    .WSTRB(s_axi_slv0_WSTRB),
    .WVALID(s_axi_slv0_WVALID),
    .WREADY(s_axi_slv0_WREADY),
    .BRESP(s_axi_slv0_BRESP),
    .BVALID(s_axi_slv0_BVALID),
    .BREADY(s_axi_slv0_BREADY),
    .ARADDR(s_axi_slv0_ARADDR),
    .ARVALID(s_axi_slv0_ARVALID),
    .ARREADY(s_axi_slv0_ARREADY),
    .RDATA(s_axi_slv0_RDATA),
    .RRESP(s_axi_slv0_RRESP),
    .RVALID(s_axi_slv0_RVALID),
    .RREADY(s_axi_slv0_RREADY),
    .interrupt(interrupt));

kmean_ip_ap_rst_if #(
    .RESET_ACTIVE_LOW(RESET_ACTIVE_LOW))
ap_rst_if_U(
    .dout(sig_kmean_ip_ap_rst),
    .din(aresetn));

endmodule
