// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _axi_interfaces_reverseBytes64_HH_
#define _axi_interfaces_reverseBytes64_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct axi_interfaces_reverseBytes64 : public sc_module {
    // Port declarations 2
    sc_in< sc_lv<64> > in_r;
    sc_out< sc_lv<64> > ap_return;


    // Module declarations
    axi_interfaces_reverseBytes64(sc_module_name name);
    SC_HAS_PROCESS(axi_interfaces_reverseBytes64);

    ~axi_interfaces_reverseBytes64();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<8> > tmp_fu_43_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_47_p4;
    sc_signal< sc_lv<8> > tmp_2_fu_57_p4;
    sc_signal< sc_lv<8> > tmp_9_fu_67_p4;
    sc_signal< sc_lv<8> > tmp_5_fu_107_p4;
    sc_signal< sc_lv<8> > tmp_s_fu_77_p4;
    sc_signal< sc_lv<8> > tmp_3_fu_87_p4;
    sc_signal< sc_lv<8> > tmp_4_fu_97_p4;
    static const bool ap_true;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<32> ap_const_lv32_38;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_return();
    void thread_tmp_1_fu_47_p4();
    void thread_tmp_2_fu_57_p4();
    void thread_tmp_3_fu_87_p4();
    void thread_tmp_4_fu_97_p4();
    void thread_tmp_5_fu_107_p4();
    void thread_tmp_9_fu_67_p4();
    void thread_tmp_fu_43_p1();
    void thread_tmp_s_fu_77_p4();
};

}

using namespace ap_rtl;

#endif
