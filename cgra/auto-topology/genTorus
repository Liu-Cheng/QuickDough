#!/usr/bin/perl -w

#####################################
## Input network parameter
## 
####################################
print "Input row number of torus\n";
$row_num = <STDIN>;
chomp($row_num);

print "Input column number of torus\n";
$col_num = <STDIN>;
chomp($col_num);

print "Output port number of the CGRA\n";
$out_port= <STDIN>;
chomp($out_port);

# Leave the data width confiuration for future work
print "Input data width of the port\n";
$data_width = <STDIN>;
chomp($data_width);

$scale=$row_num*$col_num;

my $top_name = "torus"."$scale".".v";
open INFILE, "<template.v";
open OUTFILE, ">$top_name";
my $i=0;
while(my $line=<INFILE>){
	chomp($line);
	if($line=~/\#\#/){
		$i++;
		if($i==1){
			print OUTFILE "module torus"."$scale(";
			print OUTFILE "\n";
		}
		elsif($i==2){
			gen_port_list();
		}
		elsif($i==3){
			gen_port_declaration();
		}
		elsif($i==4){
			gen_wire_declaration();
		}
        elsif($i==5){
            gen_PE_inst();
        }
        elsif($i==6){
            gen_out_connection();
        }
	}
	elsif($line=~/\/\//){}
	else{
		print OUTFILE $line;
        print OUTFILE "\n";
	}
}
close INFILE;
close OUTFILE;

###################################################################################
## Generate port list
###################################################################################
sub gen_port_list {
    for(my $i=0; $i<$out_port; $i++){
        if($i==$out_port-1){        
            print OUTFILE "          data_out"."$i";
        }
        else{
            print OUTFILE "          data_out"."$i".",";
        }
        print OUTFILE "\n";
    }
}

###################################################################################
## Generate output port declaration
###################################################################################
sub gen_port_declaration {
    my $width=$data_width-1;
    for(my $i=0; $i<$out_port; $i++){
        print OUTFILE "output["."$width".":0]"." data_out"."$i".";";
        print OUTFILE "\n";
    }
}

###################################################################################
## Generate wire declaration
###################################################################################
sub gen_wire_declaration {
    my $width= $data_width-1;
    for(my $i=0; $i<$row_num; $i++){
        for(my $j=0; $j<$col_num; $j++){
            for(my $p=0; $p<4; $p++){
                print OUTFILE "wire ["."$width".":0] PE"."$i"."$j"."_out"."$p".";\n";
            }
            print OUTFILE "\n";
        }
        print OUTFILE "\n";
    }
}

###################################################################################
## Generate the instance of all the PEs in the array
###################################################################################
sub gen_PE_inst {
    for(my $i=0; $i<$row_num; $i++){
        for(my $j=0; $j<$col_num; $j++){
            print OUTFILE "PE PE"."$i"."$j"."(\n";
            print OUTFILE "     .clk(clk),\n";
            print OUTFILE "     .rst_n(rst_n),\n";
            print OUTFILE "\n";
            my $x;
            my $y;
            my $z;
            for(my $k=0; $k<4; $k++){
                if($k==0){
                    $x=$i;
                    $y=($j+$col_num-1)%$col_num;
                    $z=2;
                }
                if($k==1){
                    $x=($i+$row_num-1)%$row_num;
                    $y=$j;
                    $z=3;
                }
                if($k==2){
                    $x=$i;
                    $y=($j+1)%$col_num;
                    $z=0;
                }
                if($k==3){
                    $x=($i+1)%$row_num;
                    $y=$j;
                    $z=1;
                }
                print OUTFILE "     .PE"."_in"."$k"."("."PE"."$x"."$y"."_out"."$z"."),\n";
            }
            print OUTFILE "\n";
            for(my $p=0; $p<4; $p++){
                if($p==3){
                    print OUTFILE "     .PE"."_out"."$p"."("."PE"."$i"."$j"."_out"."$p".")\n";
                }
                else{
                    print OUTFILE "     .PE"."_out"."$p"."("."PE"."$i"."$j"."_out"."$p"."),\n";
                }
            }
            print OUTFILE "       );\n";
            print OUTFILE "\n";
        }
        print OUTFILE "\n";
    }
}

###################################################################################
## Connect wires to output port
###################################################################################
sub gen_out_connection {
    my $width=$data_width-1;
    for(my $i=0; $i<$out_port; $i++){
        print OUTFILE "assign data_out"."$i"."=PE0"."$i"."_out0;\n";
    }
}

