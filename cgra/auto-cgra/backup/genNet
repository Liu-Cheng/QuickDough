#!/usr/bin/perl -w

#####################################
## Input network parameter
## 
####################################
print "Input total node number of the network\n";
$node_num = <STDIN>;
chomp($node_num);
print "Input the upper limit of  bidirectional link\n";
$link_upper_limit = <STDIN>;
chomp($link_upper_limit);

## Leave the data width confiuration for future work
print "Input data width of the port\n";
$data_width = <STDIN>;
chomp($data_width);
#$data_width = 16;

########################################################
## Generate _net<node_num>.v
## link configuration: link_matrix.txt
## network template: network_template.v
########################################################
# Load and check the link configuration from link_matrix.txt

open INFILE, "<link_matrix.txt";
my $i=0;
while(my $line=<INFILE>){
    chomp($line);
	$matrix_line[$i]=$line;
	my $zeros=0;
	while($line=~/0/g){
		$zeros++;
	}
	my $ones=0;
	while($line=~/1/g){
		$ones++;
	}
    if(($zeros+$ones)!=$node_num){
		print "$zeros"."zeros \n";
		print "$ones"."ones \n";
	print "Vector dimension does not match with the network scale\n";
    }
    if($ones>$link_upper_limit){
	print "There are too much connections on a single node!";
    }
	$i++;
}
close INFILE;

my $destination_file_name = "net"."$node_num".".v";
open INFILE, "<template_net.v";
open OUTFILE, ">$destination_file_name";
$i=0;
while(my $line=<INFILE>){
	chomp($line);
	if($line=~/\#\#/){
		$i++;
		if($i==1){
			print OUTFILE "module net"."$node_num(";
			print OUTFILE "\n";
		}
		elsif($i==2){
			print OUTFILE "\n";
			wire_gen();
		}
		elsif($i==3){
			pe_inst_gen();
		}
		elsif($i==4){
			wire_connection();
		}
	}
	elsif($line=~/\/\//){}
	else{
		print OUTFILE $line;
		print OUTFILE "\n";
	}
}
close INFILE;
close OUTFILE;

###################################################################################
## Generate wire definition for all the PEs in the array
###################################################################################
sub wire_gen {
	my $width = $data_width-1;
	for(my $i=0; $i<$node_num; $i++){
		for(my $j=0; $j<$link_upper_limit; $j++){
			print OUTFILE "  wire["."$width".":0] PE"."$i"."_DATA_IN"."$j".";";
			print OUTFILE "\n";
		}
		print OUTFILE "\n";
	}

	for(my $i=0; $i<$node_num; $i++){
		for(my $j=0; $j<$link_upper_limit; $j++){
			print OUTFILE "  wire["."$width".":0] PE"."$i"."_DATA_OUT"."$j".";";
			print OUTFILE "\n";
		}
		print OUTFILE "\n";
	}
   
	print OUTFILE "  wire["."$width".":0]"." NET_DATA_IN;\n";
	print OUTFILE "  reg["."$width".":0] "." NET_DATA_OUT;\n";
	print OUTFILE "\n";
}

###################################################################################
## Generate the instance of all the PEs in the array
###################################################################################
sub pe_inst_gen {
	for (my $i=0; $i<$node_num; $i++){
		print OUTFILE "  PE PE"."$i"." (\n";
		print OUTFILE "      .CLK(CLK),\n";
		print OUTFILE "      .RST(RST),\n";
		print OUTFILE "\n";
		for (my $j=0; $j<$link_upper_limit; $j++){
			if($i==0 && $j==0) {
				print OUTFILE "      .D0(NET_DATA_IN),\n";
			}
			else{
				print OUTFILE "      .D"."$j"."(PE"."$i"."_DATA_IN"."$j"."),\n";
			}
		}
		print OUTFILE "\n";
		my $j=0;
		for ($j=0; $j<$link_upper_limit-1; $j++){
			print OUTFILE "      .P"."$j"."_OUT(PE"."$i"."_DATA_OUT"."$j"."),\n";
		}
		print OUTFILE "      .P"."$j"."_OUT(PE"."$i"."_DATA_OUT"."$j".")\n";
		print OUTFILE "     );\n";
		print OUTFILE "\n";
	}
}

###################################################################################
## Connect the wires according to the link matrix
###################################################################################
sub wire_connection {
	my @out_link_id;
	my @in_link_id;
	my @link_vector;
	for(my $i=0; $i<$node_num; $i=$i+1){
		$out_link_id[$i]=0;
		$in_link_id[$i]=0;
	}
	my $src_port_id;
	my $dst_port_id;
	for(my $i=0; $i<$node_num; $i++){
		@link_vector=split/\s+/,$matrix_line[$i];
		for(my $j=0; $j<$node_num; $j++){
			if($link_vector[$j]==1){
				$src_port_id=$out_link_id[$i];
				$dst_port_id=$in_link_id[$j];
				print OUTFILE "  assign PE"."$j"."_DATA_IN"."$dst_port_id";
				print OUTFILE " = "."PE"."$i"."_DATA_OUT"."$src_port_id;"."\n";
				$out_link_id[$i]=$out_link_id[$i]+1;
				$in_link_id[$j]=$in_link_id[$j]+1;
			}
		}
		print OUTFILE "\n";
	}
}
