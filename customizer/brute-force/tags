!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Col_Compare	Customizer.py	/^def Col_Compare(Sol1, Sol2):$/;"	f
Col_Inc_Revenue_Test	Customizer.py	/^def Col_Inc_Revenue_Test(Possible_Solutions):$/;"	f
DFG_Check	Customizer.py	/^def DFG_Check(DFG_Info):$/;"	f
DFG_Sim_Check	Customizer.py	/^def DFG_Sim_Check():$/;"	f
Get_Block_Info	Customizer.py	/^def Get_Block_Info(App, Unrolling_Level):$/;"	f
Get_DFG_Info	Customizer.py	/^def Get_DFG_Info(App, Unrolling_Level):$/;"	f
Get_DFG_Perf	Customizer.py	/^def Get_DFG_Perf():$/;"	f
Get_Factor_Vec	Customizer.py	/^def Get_Factor_Vec(Data):$/;"	f
Get_Loop_Structure	Customizer.py	/^def Get_Loop_Structure(App):$/;"	f
Get_Max_SCGRA	Customizer.py	/^def Get_Max_SCGRA():$/;"	f
Get_Min_Loop_Level	Customizer.py	/^def Get_Min_Loop_Level(App):$/;"	f
Get_Next_Col	Customizer.py	/^def Get_Next_Col(Row, Col):$/;"	f
Get_Optimal_Lat	Customizer.py	/^def Get_Optimal_Lat(CGRA_Size, OP_Ready_List):$/;"	f
Get_Pareto_Points	Customizer.py	/^def Get_Pareto_Points(XArray, YArray, Pareto_XArray, Pareto_YArray):$/;"	f
Get_Possible_Blocking_Vec	Customizer.py	/^def Get_Possible_Blocking_Vec(Loop_Unrolling_Factor, Possible_Unrolling_Vec):$/;"	f
Get_Sim_Cmd	Customizer.py	/^def Get_Sim_Cmd(App, Row, Col, Schedule_Off, Sim_Only, Unrolling_Level,$/;"	f
Get_Target_Vec	Customizer.py	/^def Get_Target_Vec(Loop_Vec,  Target_Loop_Level,  Factor):$/;"	f
Get_Top2_Keys	Customizer.py	/^def Get_Top2_Keys(Dict):$/;"	f
Get_Total_Unrolling_Num	Customizer.py	/^def Get_Total_Unrolling_Num(Unrolling_Vec):$/;"	f
Is_Pareto_Point	Customizer.py	/^def Is_Pareto_Point(XData, YData, XArray, YArray):$/;"	f
Is_Vec_EQ	Customizer.py	/^def Is_Vec_EQ(Vec1, Vec2):$/;"	f
Plot_Solutions	Customizer.py	/^def Plot_Solutions(App, Possible_Solutions):$/;"	f
Row_Compare	Customizer.py	/^def Row_Compare(Sol1, Sol2):$/;"	f
Row_Inc_Revenue_Test	Customizer.py	/^def Row_Inc_Revenue_Test(Possible_Solutions):$/;"	f
Run_Block_Sim	Customizer.py	/^def Run_Block_Sim(App, Row, Col, Unrolling_Level, Blocking_Vec, Unrolling_Vec):$/;"	f
Run_DFG_Gen	Customizer.py	/^def Run_DFG_Gen(App, Row, Col, Unrolling_Level, Loop_Unrolling_Factor):$/;"	f
Run_DFG_Sim	Customizer.py	/^def Run_DFG_Sim(App, Row, Col, Unrolling_Level, Loop_Unrolling_Factor):$/;"	f
Save_Possible_Solutions	Customizer.py	/^def Save_Possible_Solutions(App, Possible_Solutions):$/;"	f
Search_Design_Space	Customizer.py	/^def Search_Design_Space(App):$/;"	f
Solutions_Perf_Filter	Customizer.py	/^def Solutions_Perf_Filter(Possible_Solutions):$/;"	f
Sort_Two_Arrays	Customizer.py	/^def Sort_Two_Arrays(XArray, YArray):$/;"	f
Unrolling_Revenue_Test	Customizer.py	/^def Unrolling_Revenue_Test(Possible_Solutions):$/;"	f
Update_Block_Info_To_Solution	Customizer.py	/^def Update_Block_Info_To_Solution(App, Unrolling_Level, Curr_Solution):$/;"	f
Update_DFG_Sim_To_Solution	Customizer.py	/^def Update_DFG_Sim_To_Solution(App, Tmp_Solution, Row, Col, Unrolling_Level,$/;"	f
main	Customizer.py	/^def main():$/;"	f
